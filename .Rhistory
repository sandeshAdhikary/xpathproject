shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?append
shiny::runApp()
shiny::runApp()
?append
shiny::runApp()
?subset()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# get xmlAttrs
get.xml.attrs<-function(lists,urls.list){
lists.with.url<-lists
for(i in 1:length(lists)){
lists.with.url[[i]]<-sapply(lists[[i]],append,values=urls.list[i])
}
unlisted<-lists.with.url%>% unlist(recursive=FALSE) %>%lapply(t %>% as.data.frame)
for(i in 1:length(unlisted)){
df<<-bind_rows(df,unlisted[[i]])
}
}
# get xmlAttrs
get.xml.attrs<-function(lists,urls.list){
df<-data.frame()
lists.with.url<-lists
for(i in 1:length(lists)){
lists.with.url[[i]]<-sapply(lists[[i]],append,values=urls.list[i])
}
unlisted<-lists.with.url%>% unlist(recursive=FALSE) %>%lapply(t %>% as.data.frame)
for(i in 1:length(unlisted)){
df<-bind_rows(df,unlisted[[i]])
}
df
}
shiny::runApp()
shiny::runApp()
?mapply
shiny::runApp()
shiny::runApp()
# get xmlAttrs
get.xml.values<-function(lists,urls.list){
lists.with.url<-mapply(append,lists,urls.list,SIMPLIFY=FALSE) %>% lapply(t %>% as.data.frame) %>% bind_rows()
lists.with.url
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?parse
shiny::runApp()
install.packages('shinyAce')
shiny::runApp()
?aceEditor()
?shinyAce
install.packages("shinyAce")
library(shinyAce)
shiny::runApp()
shiny::runApp()
?aceEditor
getAceModes()
getAceThemes
getAceThemes()
shiny::runApp()
runGitHub("shinyAce", "trestletech", subdir="inst/examples/04-shinyui")
runApp(system.file("examples/02-eval", package="shinyAce"));
runApp(system.file("examples/02-eval", package="shinyAce"));
runApp(system.file("examples/02-eval", package="shinyAce"));
?aceEditor
require("shiny")
shiny::runApp('~/Desktop/acetest')
shiny::runApp('~/Desktop/acetest')
shiny::runApp('~/Desktop/acetest')
shiny::runApp('~/Desktop/acetest')
shiny::runApp('~/Desktop/acetest')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
lapply()
?lapply()
?xpathSApply
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
require(shiny)
require(dplyr)
require(ggplot2)
require(pbapply)
require("XML")
require("RCurl")
source('makeFilePathdf.R')
source('fileToUrl.R')
source('findTriptych.R')
source('binder.R')
require('tidyr')
source('getXmlAttrs.R')
library('shinyAce')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
